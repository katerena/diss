\section{Personalized Working Environments}

One of the post-SWC interviewees lists his top 5 (with numbering added) ``data science tools and resources,'' in this order and phrasing:

\pplquote{SWC Interviewee P06}{(1) R and (2) git first; then (3) hosted version control service like GitHub and BitBucket; (4) ``obviously, StackOverflow is pretty important;'' and (5) ``mostly markdown'' or ``a little bit of LaTeX'', ``because it's easier to put text on version control''}

This list emphasizes specific tools as resources, including a programming language (R) as well as mark-up languages (markdown and LaTeX) as both part of a coherent coding environment. Another interviewee additionally comments on her 5 top resources (also with numbers added):

\pplquote{SWC interviewee P12}{I [would have preferred] (1) Python or R instead of MATLAB or LabVIEW, which the lab is using. They are open source [rather than proprietary] and there's a lot of [examples online:] `hereâ€™s XYZ and you can just download this code and run it and it will produce what you want!' I use a lot of [examples] from (2) StackOverflow. (3) Wikipedia is where I go if I want to actually know what I am doing. ... (4) Just the very basic computer science classes I took and then dropped in college [where I learned to] draw those flow charts of programming ... draw a logical chart to map out what you're doing. Then (5) talking to other people, finding somebody that knows how to do what I want to do in whatever language and then I'll just learn that language or that part of that language so that I can do the thing that I want to do.}    

In the above quote, there are the familiar on-demand on-line resources (StackOverflow - mentioned by everyone; Wikipedia - mentioned by many). The interviewee P12, quoted above, in addition to specific tools, cites \textit{drawing} as a resource, and \textit{asking colleagues}, which below are categorized as cognitive and social resources respectively.  Additionally, the interviewee articulates a misalignment between her preferences and her working environment, which is dictated in part by the lab. In another interview, with someone going into their first faculty position, the interviewee mentions a similar tension between his preferences and his prior context, which then inform his choices of establishing best practices in his own lab\footnote{SWC Interviewee P02, quoted on the subject in the beginning of Section 7.2}. In the first quotation, from SWC Interviewee P06, the participant elaborates later that he does not work closely on code with anyone else. This allows him to be ``probably faster, because I'm never waiting on somebody else to finish anything [but also a little bit dangerous though because I have no checks.'' Aside from lacking additional external scrutiny, P06 is able to be more free with his choice of tooling. 

Working environments  embody personal preferences and context-specific requirements in the programs and interfaces (scripting, GUI, etc.) that are chosen from from many available and competing options, for code work. In the interviews of past SWC participants which comprise almost half of the study (see Figure \ref{fig:pops}), I asked about their favorite resources, online and offline, used in the course of [doing data science]\footnote{The phrasing depended on how the participant had described their own work: their ``data science work-flow,'' just ``data processing,'' or ``writing code'' - with my interests being consistently on the amorphous but omnipresent collection of code work activities and practices}. The ``top 5'' part of the question helped to push people to think more broadly, as most could immediately name one or two commonly-used tools (StackOverflow, a specific tutorial, or person in their lab known for their remarkably helpfulness) but had to take a few minutes to consider their definition. The protocol for these interviews (included in Section 3.1) was purposely open-ended to allow a range of answers. ``Resources'' include not only specific programs or websites but also their problem-solving approaches as they are supported by specific technologies, or mediated by social interactions.

Three of the most universally commonly-cited resources were \textbf{on-line on-demand} resources; \textbf{high-maintenance social} resources; and \textbf{guiding} resources. On-line, on-demand resources include StackOverflow and Google search. In the sense that they are produced by other users on communication platforms, they are ``social'' resources, however they are different from the high-maintenance resources of emailing an expert colleague for help, as one participant describes: ``If I have people that are good with a certain software I'll tap them on the shoulder and say, `Hey, do you know how to do this?' or send them an email as I go through. I usually tailor my questions to specific people, and I'll pull a couple of those issues out of my list and send them on so that I don't overwhelm my contacts.''%P01

The ``list'' that the above quote mentions is a particular \textit{cognitive resource} that was also not uncommon: ``I have an issues list that I might have time to get to.'' The ``issues'' include ``little things'' to get back to, ``dirty shortcuts that worked'' waiting to be cleaned up, and more generally ``speed bumps I've been hitting in software.'' This can be seen as a \textit{guiding resource} aimed at a ``future self:'' ``I try and make a notes list of quick shortcuts that I don't use very often but will find handy and might not remember in the future. Sometimes my [notes on challenges and problems] turn into quick shortcut cheat sheets.'' Other guiding resources include tutorials that combine actionable things (e.g., code snippets) with explanation. Those  that were noted as especially useful by interviewees were ones put together by people in the field who had created the tool or used it extensively and were seen as relatable or recognizable individuals. For example, Jake VanderPlas is prolific in data science advocacy and education enough to have been mentioned offhand in a variety of contexts during this study, praising the quality of resources he produced.  %P01

In many cases of learning, there is a sense that the purpose of learning is to expand one's imagination by way of growing the vocabulary of what-could-be, as a way to search out new technical and social resources (which are represented, respectively, in the emphases added to this quote from an SWC interview participant): %DSSWC\_P03 
\pplquote{SWC Interviewee}{Half of the importance is being introduced to a subject, especially one that I have hardly any training in. It's  basically how to ask intelligible questions; there's going to be things that [a workshop] doesn't address, but \textbf{being able to ask an intelligent question} and \textbf{understand who might know the answer} is half battle.... One of the reasons why I love Wikipedia because it at least  tells me what terms I should Google.}

Differences in working environment arise not only from the passage of time, but from the personal differences between individual working environments.  All code is subject to ``bit rot'': the degradation of code that is not touched over time. This degradation is the result of inevitable and ongoing changes to the working environment, or of upgrades to various components on which it depends. This creates an additional barrier to collaborating directly on a figure. In one case, a post-doctoral researcher and a graduate student he had worked with before were collaborating over a distance on a manuscript. Although all analysis code was in GitHub, and despite extensive exchange of figure code, he told me that they still could not produce the same figure. The trouble was that he was improving the analysis code, which made for two alternative versions of it: the one ``frozen'' in time and the one under ongoing modifications. The student used the one in flux, rather than the one frozen in time, which generated one form of miscommunication resulting from trying to reproduce a figure in a different environment. In another case, the student has made an incorrect assumption in her code, which resulted in a chart that looked like nothing really interesting was present in the data. When the post-doctoral researcher identified and removed the error, the resulting figure was amazing, exciting, and clearly demonstrating a strong correlation.

The social, cognitive, and technical components of an individual's working environment are all interdependent. When Erin first joined the RegionalNowcast-Model group, she was required - as everyone else - to transition to using version control (hg and bitbucket) in a way prescribed by the group (folders for different researchers, plus documentation on a separate site dedicated to creating public documentation as an appreciated service to the broader oceanographic community). The documentation site (technical resource) is a living document instrumental in supporting collaboration within the group and introducing new members to it (cognitive resource). It is supported by continual, nearly-weekly meeting where questions of what documentation should go where can be answered (social resource). Josh, a graduate student in the group, told me that that the working environment had changed dramatically in only the past three years, with much more of the kind of structure that Erin encountered. The CustomInsturment-Lab also had a regular meeting where team and collaboration members were able to bring their questions (about where documentation or data files ought to go, or to announce in-person some change in the library they were writing or an improvement in its functionality). However this was less frequent and also spanned many other concerns that tended to fill the space of the meeting much more frequently (e.g., paper publication venues and plans that make the most sense for recognizing the contribution of different members of the interdisciplinary project) so the technical/cognitive resource of particular commented sections of code therefore extended to those few people who actually wrote them.


The utility of the \emph{working environment} as a conceptual tool is to allow us a greater degree of freedom for talking about the adoption and adaptation of new tools or skills. For example, Mallory, a post-doctoral researcher in the CustomInstrument-Lab group, explains to me why she is ``investing'' time in re-making her visualization in Python rather than MATLAB. Her MATLAB license had expired, and so this was the trigger to make a decision, at which point she decided in favor of the open-source, free technical components of her working environment. Furthermore, she describes code for visualization as both (1) persisting for each published visualization, to aid documentation reproducibility; and (2) extensible for similar visualizations later on, or at least modifiable in terms of formatting. The piece(s) of code in question act(s) as both technical and cognitive resources, respectively. As another example, a ``sequence database'' may not be a database, in the sense of a structured way to store data that abstracts interacting with its semantics away from the details of its storage on disk. A text file with sequences may constitute a usable database, as the text-file fulfils its technical resource requirement.

The working environment is centered around visual representations. Operations within the environment are inspired by wanting or seeing a chart or graph that has ``weird'' or ``interesting'' features. Spotting these relies on the cognitive resource of a scientist's training, focus, and research taste. An example social resource in this scenario is a discussion that resolves these features into a causal explanation. The result of the discussion is either an explanation of how the chart ``makes sense'' or a concrete next step to investigate the ``weird'' feature or further explore the ``interesting'' one. The level of scrutiny applied to both is similar, though the ``interesting'' receives enthusiasm where the ``weird'' receives a persistent, puzzle-solving sort of dedication.

Because of the social nature of this questioning, the technical resource requires shareability. However, it is the technical resource \emph{as a whole} that has this requirement, not a specific part of it. Gathering around a monitor, for example, is the most common. This imposes no requirements on the specific technologies used to produce a picture. Other options include printing and laying out the charts and projecting during a group meeting. The core design requirements here are ease, control, and reconfigurability. The advantage of the printouts, for example, is their affordance to be rearranged into different pairs or sets. It is very rare for a single chart to be the subject of attention. Typically, multiple charts are discussed, either in context of drawing a comparison or in triangulating a process or feature of interest across multiple slices through space or time. In the case of projecting charts, either an interactive iPython Notebook (iPyNB) environment or a presentation slide-deck allows moving between multiple charts of interest, created by that individual in an informed anticipation of the discussion. In the case of standing around a computer, the programming environment  which produced the charts in the first place (R, MATLAB) is at hand to help generate new images on demand as part of a process of rapid exploratory analysis.

Comparison and triangulation, which is at the core of the exercise described above, can be done either at the level of plotting additional data points for comparison, or by articulating a known pattern (for example, ``we expect to see this kind of salinity at the surface, but not in the deep''). This ``informal'' comparison that draws on shared knowledge - articulated as a hunch or as a whiteboard squiggle - is a crucial step of interpreting and interrogating a new data artifact. In terms of tooling, any visualization environment which encodes too much of the comparison violates this requirement.

The resources comprising the working environment are not static but subject to evolving capabilities and constraints. For example, an SWC Interviewee notes that: ``I suspect there will be a lot of changes, but for the positive... once I start working on the statistics part and the automation integration with two other researchers on my team, we have to have protocols set up, like how to create meta data, how to format scripts in R ... their structure to create the meta data script type thing, and ... an R add on for web data visualization.'' Needing to ``have protocols set up'' articulates a need for social resources, and the cognitive resource of data visualizations is recognized, however the primary way of articulating the working environment is through the listing of various particular packages and associated protocols. In the next section, I describe the collective imagination of the perfect world, which is that implicit possible future against which the coming changes can be interpreted as being ``for the positive.''

In the first few weeks of my observation, and of his membership in the BioGeoChem-Model team, Ryan gives a lengthy talk recapping his prior dissertation work. In Ryan's talk, we witness an exchange of tooling approaches, enabled by Ryan's methodology being relatively novel to this team. In his ``overview slide'' he mentions microbe counting, which surprises the PI because he would have expected it to be using image processing and be more ``advanced.'' Although the ``manual'' process of Ryan's unfamiliar method is vaguely disappointing/disillusioning, the relatively more familiar but still ``other'' process of PIB's sequencing (she sends samples off for sequencing and is getting rid of all her own sequencers) is amazing to the PI of the Omics-Lab group: she literally says, ``it's amazing! We are 10 years out. I am shocked.'' Another member of the group points out that  their in-house process also allows additional specialized contexts and methods development, which is the focus of this group. \kt{unpackthis - gina}

During Ryan's talk, the PI of the team points out, as he typically does, ways in which the findings could be delivered more effectively. The timbre of this feedback, which is common in the practice and casual talks in the team, is about showcasing the work. As one of the students puts it, ``the audience deserve to be wowed'' by a particularly impressive chart, so it should be given more time in the talk. In this case, the PI notes that ``a model would be a nice way to show what you're talking about,'' while one group member asks whether PCA (principal component analysis) might be useful, and another asks about possible applications of machine learning. These comments reflect their respective current methodological interests, as I discover later in follow-up casual conversation.

Other people's approaches can pique curiosity, as above, but also inspire awe or judgment. For example, Mallory is presenting by way of scrolling through her iPython Notebook. In the course of narrating her findings, she casually and quickly implements a small analysis suggestion from the audience on the projector screen. This impresses the PI of the CustomInstrument-Lab team: ``you just did that \emph{on the fly}?! \emph{Really cool!}'' On another occasion, a graduate student and the PI from the Omic-Lab team are discussing another group's cruise data collection protocol and set-up. They express amazement by the choices in the protocol, which would make it unnecessarily and unreasonably slow, in their opinion.

Continuing his answer about resources, SWC Interviewee P06 comments on looking at other scientist and programmer blogs about their work (``Also, I follow a number of different scientists on Twitter.  If I notice a tweet that somebody that I know does pretty good work and seems to produce a lot of impressive figures I check out their post and see if there's anything I can glean from that''), especially those supplemented with interactive visualizations (``a lot of people use IPython Notebooks these days, which is very nice''), saying that he ``looks for a little bit of both [inspiration and examples]. I look for examples of realized visualizations that appeal to me [that may] appeal to other people in my field. I also look for examples where people have done things in kind of a cool way that I previously haven't thought about, or didn't know what was possible. It expands my horizons of what I can think of in terms of what I might try in the future.'' This interviewee, who does modeling work, has integrated into his working environment a resource that allows him to continually expand his imagination with ``cool'' new approaches.