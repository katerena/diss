\section{Taking the Plunge}

One of the 20 participants explains their motivation for attending the SWC event (emphases and numbering-marks added), quoted below, with emphases added to identify components (bold-faced and numbered) that exemplify the ideas in the rest of this chapter:

\pplquote{P02}{I’ve been doing increasing amounts of data processing, starting during my PhD with a lot of my own data, using some larger online databases. I am \textbf{planning on starting doing more of that (1)}. I guess there's two things, one is that often we're just learning on our own, and that’s effective to a certain extent but if you ever want to try something new, there's a lot of \textbf{inertia for trying something totally new (2)}, so it's nice to get an introduction into whatever's going to be new to you, to give you that boost so that you can actually not be afraid to try it. In my case, it was GitHub that \textbf{I'd heard a lot about (3)}, didn't really quite understand how it worked or what its purpose was, so I wanted to learn about that. The second thing is that I'm starting a lab of my own as a professor in the fall. And with my own students and postdocs coming in, I want us to do things like GitHub and version control. [I want to learn these skills myself] so that I can \textbf{best teach them and establish good practices within my own lab (4)}.}

The participant had been ``doing an increasing amount of data processing'' (programmatically, involving code work) and is ``planning on starting doing more'' (1, in the quote above). This pertains to an anticipation of the near-or-far future (a la `anticipation work' \cite{steinhardt2015anticipation}), and is an example of future-oriented motivation for programming skill expansion or acquisition. Points (2-4) exemplify typical sentiment toward GitHub as an instantiation of a desirable best practice. Because the speaker places trust in the social context (3), it is not necessary to ``quite understand how it worked or what its purpose was'' in order to attend a workshop. Attending the workshop \textit{is} the act of change that is deliberately 

How long is it necessary to put time and energy into something before giving up on it? The kind of of change this chapter focuses on requires a step into the unknown. Code work is associated with an inability to foresee the effects of change at every level of granularity. Figure \ref{fig:cycle2} shows the process in deciding to make a deliberate change, in which awareness escalates into intention and then, finally, into action. Section 6.2 focuses on the awareness-intention part of this flow, whereas here I focus on action, momentum, and opportunity. \kt{gina- 1-2 more paras abt fig}

Momentum is built through community interest and through awe, curiosity, and skepticism that pushes an individual to seek out alternative methods. Opportunity can be in the form of mandatory policies or requirements, or limited-time events. Additionally, new project energy as well as breakdown of existing process provide both opportunity and momentum for change. For example, when a database error results in a post-doc in the CustomInstrument-Lab group having to re-ingest all her data into the database, this also presents an opportunity to address some formatting and documentation shortcomings in the past. The opportunity is, nevertheless, a silver lining on an otherwise ``devastating'' event that did not result in data loss, but \emph{did} result in setting the researcher back two months \ca{ONE OR TWO MONTHS?} (her estimate, in an informal interview context, as she recounts the narrative) in addition to a decision to switch to smaller-scale analyses that did not require ``big data'' management or processing infrastructure to the previous extent.

Breakdowns need not be severe to inspire change: they may just bring to light the elements of the current practice that demand time but are not an \textit{investment} of time. In the Omics-Lab, the typical process that involves Excel is not only painfully time-consuming for larger datasets, but the time spent further underlines how much \textit{more} time will be spent on this in the future, and how unscalable the approach is. Writing a script, on the other hand, involves time-consuming learning, but this is an investment. Mallory from the CustomInstrument-Lab noted a similar attitude about learning to make publication-ready charts using Python rather than MATLAB: it would have been faster in MATLAB, but this was an ``investment'' for the future. It, too, was prompted by her MATLAB license expiring, and the realization that the monetary cost of maintaining it would not be an investment.

Statements like, ``I could do this all [day/week/month], I could let it take up that time, but I'll just see how far I get in [a more limited span] and that's that'' are common, and taken together, identify time limits - self-imposed or external - as helpful in the decision to try something new. The ability to stick to these self-imposed limits varies person to person. A workshop event provides structure (opportunity) for something which there is already enough interest. Events provide structure in terms of time, as well as additional structure, in terms of curriculum and helpers. The mere \textit{existence} of this structure is an important benefit the event: the investment becomes more straightforward, and leap more accessible.

%Alternatively, new projects - and their invigorating energy - also post opportunities.

The decision to pursue change requires guidance from a trusted individual on the  \emph{realistic} costs and benefits of \emph{concrete} alternatives(s). This trusted individual plays the \textit{software advisor} role by \textit{championing}\footnote{This new role label is used only in this section, and introduced because the ``chapmion'' if a particular tool need not be the same person who typically plays the \textit{software advisor} role; it can jut as well be a visitor giving an envigorating talk about how scientists can implement better programming practices, or a perceived expert who expresses enthusiasm about something in her audience's awareness, escalating it to intention (see Section 6.2)}. The champion can deliberately work to not underestimate cost, by learning more about current working environment; as well as work to not overestimate benefit, by learning more about other available options. Ed, the \textit{software advisor} from the RegionalNowcast-Model team, exercises thoughtful caution when it comes to advice, focusing on what is more necessary at the time. 

The outcomes of such a ``moment of flux'' is \textbf{not necessarily adoption.} This is the core thesis: going through the process of informed attempt and subsequent rejection of a particular tool, skill, or process has a noticeable impact on the individual and collective imagination. If we were to enumerate the possible outcomes of moments of flux, we could identify \emph{any decision} (both to use and to not use) as qualitatively better than becoming overwhelmed, retreating from the attempt to incorporate the tool, and persisting with the existing environment out of inertia. This latter form involves paying at least some of the time and energy cost of commitment, but without the benefit of greater control and less sense of being subjected to an unnecessarily painful process that ``everyone'' else has moved on from.

Change to a working environment includes (1) \textit{integration} challenges, both in terms of the daily work of the individual and figuring out how to share things with colleagues and collaborators. Aside from figuring out how the working environment must change to incorporate the new tool or skill moving forward, the scientist must also decide on the (2) \textit{extent of migration} of older projects. There is a cost in maintaining multiple working environments, both in terms of attention and compatibility of small utilities. Migration may especially affect changes that take on additional meaning besides functionality; SWC Interviewees described the need to make code ``prettier' before putting it online as a barrier to migrating old projects to GitHub. This barrier is great enough to keep GitHub in the scientist's awareness and intention, not escalating to action.

There are also issues of \textbf{scale} and \textbf{centrality} that become salient in the fragmented and seasonal context of scientific code work: even when there is a large software component a researcher works on, there are many other projects, most of which the scientist is not merely a contributor to, but the leader/owner of. As such, the burden of management falls on the scientist, including the responsibility to decide how to divide up the components of her work into meaningful but manageable parcels. The scientist typically has a variety of ``projects:'' a project from their previous work (e.g., their dissertation project), which perhaps has been picked up by a student or colleague; at least one ``side project,'' following up intermittently on interesting ideas which pique  attention and await fruition sometimes for years; and any ongoing collaborations.   Most people keep such projects separate, as a project has associated with it data files, visualizations, code for the visualizations (an intermediate visualization, if the ``side project'' blooms to fruition, will to be re-made with the correct formatting for publication, or with changes), notes about analysis, and so on. The ``centrality'' of the resource depends on the interconnectedness: for example, though some data is intended to be available for a while, groups may choose to have back up data on their servers ``just in case,'' ``for posterity,'' or be aware of group members who had downloaded data in the past. The members of the BioGeoChem-Model group both worked primarily on their own, and maintained a number of ongoing connections.

From the observer's standpoint, this unsatisfying type of non-adoption is not distinguishable from the satisfying and meaningful one without asking about it directly. For example, in the later section 6.4, I tell the story of the Omics-Lab deciding to try out Tableau. In the conclusion, an R implementation of a particular chart is preferable. However, the reasons for this preference included a studied rejection of Tableau for R, based on its capabilities. Even following a completed and/or successful ``leap,'' when the once-oblique tool becomes readily usable or the once-obscure practice turns into second nature, it would be a mis-characterization to say that the ``problem'' that precipitated the action was ``solved.'' Even if the initial prompt was a problem and the championed solution addressed it, the goal of something like a ``best practice'' is sustained impact. Nevertheless, this itself is distinct from sustained use of the particular intervening solution.

The outcome of a ``leap'' cannot be assessed by measuring adoption alone. The best possible outcome is an informed decision, which \textit{may} be the decision that the tool or protocol in question is inappropriate relative to the problem. A worse outcome is overwhelm-based inertia: an unresolved sense of ``we should use this.'' The worst outcome involves paying the time and energy cost of committing to some solution, but without the benefit of more control. Attempted-adoption, resulting in an informed rejection, is a positive outcome because adoption requires learning a skill (installation and integration pertinent to the tool in question) and a language, which is invaluable for gaining access to additional resources, in the words of a SWC Interviewee: ``even writing down the question or the issue, formalizing that into a sentence that you can understand, and then thinking of search keywords, and then visiting those resources or talking to other students.'' The ability to articulate requests for help, which, as reviewed in Section 4.1, is a major resource at the disposal of the scientist in a problem-solving situation.

The day-to-day reality of scientific work is a series of choices made in an attention-sparse environment, and adopting tools or social protocols that are already in the awareness-intention pathway is met less with resistance to change, but more with overwhelm over an embarrassment of riches. In this case, the task of the champion is less to persuade and more to avoid misleading or mis-representing, as this could quickly exhaust an already overwhelmed audience, and thus make that audience less receptive. 